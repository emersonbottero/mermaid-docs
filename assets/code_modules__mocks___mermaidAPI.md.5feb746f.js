import{_ as e,c as t,o as a,d}from"./app.ef92c309.js";const _=JSON.parse('{"title":"Module: __mocks__/mermaidAPI","description":"","frontmatter":{},"headers":[{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"References","slug":"references","link":"#references","children":[]},{"level":3,"title":"Variables","slug":"variables","link":"#variables","children":[]}]},{"level":2,"title":"References","slug":"references-1","link":"#references-1","children":[{"level":3,"title":"default","slug":"default","link":"#default","children":[]}]},{"level":2,"title":"Variables","slug":"variables-1","link":"#variables-1","children":[{"level":3,"title":"mermaidAPI","slug":"mermaidapi","link":"#mermaidapi","children":[]}]}],"relativePath":"code/modules/_mocks___mermaidAPI.md"}'),r={name:"code/modules/_mocks___mermaidAPI.md"},i=d('<p><a href="./../README.html">mermaid-docs</a> / <a href="./../modules.html">Exports</a> / __mocks__/mermaidAPI</p><h1 id="module-mocks-mermaidapi" tabindex="-1">Module: __mocks__/mermaidAPI <a class="header-anchor" href="#module-mocks-mermaidapi" aria-hidden="true">#</a></h1><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a></h2><h3 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-hidden="true">#</a></h3><ul><li><a href="./_mocks___mermaidAPI.html#default">default</a></li></ul><h3 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-hidden="true">#</a></h3><ul><li><a href="./_mocks___mermaidAPI.html#mermaidapi">mermaidAPI</a></li></ul><h2 id="references-1" tabindex="-1">References <a class="header-anchor" href="#references-1" aria-hidden="true">#</a></h2><h3 id="default" tabindex="-1">default <a class="header-anchor" href="#default" aria-hidden="true">#</a></h3><p>Renames and re-exports <a href="./_mocks___mermaidAPI.html#mermaidapi">mermaidAPI</a></p><h2 id="variables-1" tabindex="-1">Variables <a class="header-anchor" href="#variables-1" aria-hidden="true">#</a></h2><h3 id="mermaidapi" tabindex="-1">mermaidAPI <a class="header-anchor" href="#mermaidapi" aria-hidden="true">#</a></h3><p>\u2022 <code>Const</code> <strong>mermaidAPI</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>defaultConfig</code></td><td style="text-align:left;"><a href="./../interfaces/config_type.MermaidConfig.html"><code>MermaidConfig</code></a></td></tr><tr><td style="text-align:left;"><code>getConfig</code></td><td style="text-align:left;">() =&gt; <a href="./../interfaces/config_type.MermaidConfig.html"><code>MermaidConfig</code></a></td></tr><tr><td style="text-align:left;"><code>getSiteConfig</code></td><td style="text-align:left;">() =&gt; <a href="./../interfaces/config_type.MermaidConfig.html"><code>MermaidConfig</code></a></td></tr><tr><td style="text-align:left;"><code>globalReset</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>initialize</code></td><td style="text-align:left;"><code>Mock</code>&lt;<code>any</code>[], <code>any</code>&gt;</td></tr><tr><td style="text-align:left;"><code>parse</code></td><td style="text-align:left;">(<code>text</code>: <code>string</code>, <code>parseError?</code>: <code>Function</code>) =&gt; <code>boolean</code></td></tr><tr><td style="text-align:left;"><code>parseDirective</code></td><td style="text-align:left;"><code>Mock</code>&lt;<code>any</code>[], <code>any</code>&gt;</td></tr><tr><td style="text-align:left;"><code>render</code></td><td style="text-align:left;"><code>Mock</code>&lt;<code>any</code>[], <code>any</code>&gt;</td></tr><tr><td style="text-align:left;"><code>reset</code></td><td style="text-align:left;">() =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>setConfig</code></td><td style="text-align:left;">(<code>conf</code>: <a href="./../interfaces/config_type.MermaidConfig.html"><code>MermaidConfig</code></a>) =&gt; <a href="./../interfaces/config_type.MermaidConfig.html"><code>MermaidConfig</code></a></td></tr><tr><td style="text-align:left;"><code>updateSiteConfig</code></td><td style="text-align:left;">(<code>conf</code>: <a href="./../interfaces/config_type.MermaidConfig.html"><code>MermaidConfig</code></a>) =&gt; <a href="./../interfaces/config_type.MermaidConfig.html"><code>MermaidConfig</code></a></td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p><a href="https://github.com/emersonbottero/mermaid-docs/blob/f565dc0/src/__mocks__/mermaidAPI.ts#L30" target="_blank" rel="noreferrer">src/<strong>mocks</strong>/mermaidAPI.ts:30</a></p>',17),l=[i];function o(c,n,s,f,m,h){return a(),t("div",null,l)}const p=e(r,[["render",o]]);export{_ as __pageData,p as default};
