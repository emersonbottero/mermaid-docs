import{_ as e,c as t,o as a,d as r}from"./app.ef92c309.js";const m=JSON.parse('{"title":"Module: diagrams/er/erRenderer","description":"","frontmatter":{},"headers":[{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"Variables","slug":"variables","link":"#variables","children":[]},{"level":3,"title":"Functions","slug":"functions","link":"#functions","children":[]}]},{"level":2,"title":"Variables","slug":"variables-1","link":"#variables-1","children":[{"level":3,"title":"default","slug":"default","link":"#default","children":[]}]},{"level":2,"title":"Functions","slug":"functions-1","link":"#functions-1","children":[{"level":3,"title":"draw","slug":"draw","link":"#draw","children":[]},{"level":3,"title":"generateId","slug":"generateid","link":"#generateid","children":[]},{"level":3,"title":"setConf","slug":"setconf","link":"#setconf","children":[]}]}],"relativePath":"code/modules/diagrams_er_erRenderer.md"}'),d={name:"code/modules/diagrams_er_erRenderer.md"},n=r('<p><a href="./../README.html">mermaid-docs</a> / <a href="./../modules.html">Exports</a> / diagrams/er/erRenderer</p><h1 id="module-diagrams-er-errenderer" tabindex="-1">Module: diagrams/er/erRenderer <a class="header-anchor" href="#module-diagrams-er-errenderer" aria-hidden="true">#</a></h1><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a></h2><h3 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-hidden="true">#</a></h3><ul><li><a href="./diagrams_er_erRenderer.html#default">default</a></li></ul><h3 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-hidden="true">#</a></h3><ul><li><a href="./diagrams_er_erRenderer.html#draw">draw</a></li><li><a href="./diagrams_er_erRenderer.html#generateid">generateId</a></li><li><a href="./diagrams_er_erRenderer.html#setconf">setConf</a></li></ul><h2 id="variables-1" tabindex="-1">Variables <a class="header-anchor" href="#variables-1" aria-hidden="true">#</a></h2><h3 id="default" tabindex="-1">default <a class="header-anchor" href="#default" aria-hidden="true">#</a></h3><p>\u2022 <strong>default</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>draw</code></td><td style="text-align:left;">(<code>text</code>: <code>any</code>, <code>id</code>: <code>any</code>, <code>_version</code>: <code>any</code>, <code>diagObj</code>: <code>any</code>) =&gt; <code>void</code></td></tr><tr><td style="text-align:left;"><code>setConf</code></td><td style="text-align:left;">(<code>cnf</code>: <code>any</code>) =&gt; <code>void</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p><a href="https://github.com/emersonbottero/mermaid-docs/blob/f565dc0/src/diagrams/er/erRenderer.js#L704" target="_blank" rel="noreferrer">src/diagrams/er/erRenderer.js:704</a></p><h2 id="functions-1" tabindex="-1">Functions <a class="header-anchor" href="#functions-1" aria-hidden="true">#</a></h2><h3 id="draw" tabindex="-1">draw <a class="header-anchor" href="#draw" aria-hidden="true">#</a></h3><p>\u25B8 <strong>draw</strong>(<code>text</code>, <code>id</code>, <code>_version</code>, <code>diagObj</code>): <code>void</code></p><p>Draw en E-R diagram in the tag with id: id based on the text definition of the diagram</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>text</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">The text of the diagram</td></tr><tr><td style="text-align:left;"><code>id</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;">The unique id of the DOM node that contains the diagram</td></tr><tr><td style="text-align:left;"><code>_version</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;"><code>diagObj</code></td><td style="text-align:left;"><code>any</code></td><td style="text-align:left;"></td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a></h4><p><a href="https://github.com/emersonbottero/mermaid-docs/blob/f565dc0/src/diagrams/er/erRenderer.js#L575" target="_blank" rel="noreferrer">src/diagrams/er/erRenderer.js:575</a></p><hr><h3 id="generateid" tabindex="-1">generateId <a class="header-anchor" href="#generateid" aria-hidden="true">#</a></h3><p>\u25B8 <strong>generateId</strong>(<code>str?</code>, <code>prefix?</code>): <code>string</code></p><p>Return a unique id based on the given string. Start with the prefix, then a hyphen, then the simplified str, then a hyphen, then a unique uuid. (Hyphens are only included if needed.) Although the official XML standard for ids says that many more characters are valid in the id, this keeps things simple by accepting only A-Za-z0-9.</p><p><strong><code>See</code></strong></p><p><a href="https://www.w3.org/TR/xml/#NT-Name" target="_blank" rel="noreferrer">https://www.w3.org/TR/xml/#NT-Name</a></p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default value</th></tr></thead><tbody><tr><td style="text-align:left;"><code>str?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>&#39;&#39;</code></td></tr><tr><td style="text-align:left;"><code>prefix?</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;"><code>&#39;&#39;</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-hidden="true">#</a></h4><p><code>string</code></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-hidden="true">#</a></h4><p><a href="https://github.com/emersonbottero/mermaid-docs/blob/f565dc0/src/diagrams/er/erRenderer.js#L688" target="_blank" rel="noreferrer">src/diagrams/er/erRenderer.js:688</a></p><hr><h3 id="setconf" tabindex="-1">setConf <a class="header-anchor" href="#setconf" aria-hidden="true">#</a></h3><p>\u25B8 <strong>setConf</strong>(<code>cnf</code>): <code>void</code></p><p>Allows the top-level API module to inject config specific to this renderer, storing it in the local conf object. Note that generic config still needs to be retrieved using getConfig() imported from the config module</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>cnf</code></td><td style="text-align:left;"><code>any</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-hidden="true">#</a></h4><p><code>void</code></p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-hidden="true">#</a></h4><p><a href="https://github.com/emersonbottero/mermaid-docs/blob/f565dc0/src/diagrams/er/erRenderer.js#L28" target="_blank" rel="noreferrer">src/diagrams/er/erRenderer.js:28</a></p>',46),i=[n];function l(o,s,h,c,f,g){return a(),t("div",null,i)}const b=e(d,[["render",l]]);export{m as __pageData,b as default};
