import{_ as e,c as t,o as r,d as a}from"./app.ef92c309.js";const g=JSON.parse('{"title":"Module: diagrams/requirement/requirementMarkers","description":"","frontmatter":{},"headers":[{"level":2,"title":"Table of contents","slug":"table-of-contents","link":"#table-of-contents","children":[{"level":3,"title":"Variables","slug":"variables","link":"#variables","children":[]}]},{"level":2,"title":"Variables","slug":"variables-1","link":"#variables-1","children":[{"level":3,"title":"default","slug":"default","link":"#default","children":[]}]}],"relativePath":"code/modules/diagrams_requirement_requirementMarkers.md"}'),d={name:"code/modules/diagrams_requirement_requirementMarkers.md"},i=a('<p><a href="./../README.html">mermaid-docs</a> / <a href="./../modules.html">Exports</a> / diagrams/requirement/requirementMarkers</p><h1 id="module-diagrams-requirement-requirementmarkers" tabindex="-1">Module: diagrams/requirement/requirementMarkers <a class="header-anchor" href="#module-diagrams-requirement-requirementmarkers" aria-hidden="true">#</a></h1><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a></h2><h3 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-hidden="true">#</a></h3><ul><li><a href="./diagrams_requirement_requirementMarkers.html#default">default</a></li></ul><h2 id="variables-1" tabindex="-1">Variables <a class="header-anchor" href="#variables-1" aria-hidden="true">#</a></h2><h3 id="default" tabindex="-1">default <a class="header-anchor" href="#default" aria-hidden="true">#</a></h3><p>\u2022 <strong>default</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ReqMarkers</code></td><td style="text-align:left;">{ <code>ARROW</code>: <code>string</code> = &#39;arrow&#39;; <code>CONTAINS</code>: <code>string</code> = &#39;contains&#39; }</td></tr><tr><td style="text-align:left;"><code>ReqMarkers.ARROW</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>ReqMarkers.CONTAINS</code></td><td style="text-align:left;"><code>string</code></td></tr><tr><td style="text-align:left;"><code>insertLineEndings</code></td><td style="text-align:left;">(<code>parentNode</code>: <code>any</code>, <code>conf</code>: <code>any</code>) =&gt; <code>void</code></td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-hidden="true">#</a></h4><p><a href="https://github.com/emersonbottero/mermaid-docs/blob/f565dc0/src/diagrams/requirement/requirementMarkers.js#L66" target="_blank" rel="noreferrer">src/diagrams/requirement/requirementMarkers.js:66</a></p>',12),n=[i];function l(s,o,c,h,m,u){return r(),t("div",null,n)}const _=e(d,[["render",l]]);export{g as __pageData,_ as default};
