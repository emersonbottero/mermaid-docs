import{_ as n,o,c as l,b as s,a,r as t}from"./app.640ec9d8.js";const b=JSON.parse('{"title":"Directives","description":"","frontmatter":{},"headers":[{"level":2,"title":"Directives","slug":"directives-1","link":"#directives-1","children":[]},{"level":2,"title":"Types of Directives options","slug":"types-of-directives-options","link":"#types-of-directives-options","children":[]},{"level":2,"title":"Declaring directives","slug":"declaring-directives","link":"#declaring-directives","children":[]},{"level":2,"title":"Directive Examples","slug":"directive-examples","link":"#directive-examples","children":[{"level":3,"title":"Changing Theme via directive","slug":"changing-theme-via-directive","link":"#changing-theme-via-directive","children":[]},{"level":3,"title":"Changing fontFamily via directive","slug":"changing-fontfamily-via-directive","link":"#changing-fontfamily-via-directive","children":[]},{"level":3,"title":"Changing logLevel via directive","slug":"changing-loglevel-via-directive","link":"#changing-loglevel-via-directive","children":[]},{"level":3,"title":"Changing flowchart config via directive","slug":"changing-flowchart-config-via-directive","link":"#changing-flowchart-config-via-directive","children":[]},{"level":3,"title":"Changing Sequence diagram config via directive","slug":"changing-sequence-diagram-config-via-directive","link":"#changing-sequence-diagram-config-via-directive","children":[]}]}],"relativePath":"config/directives.md"}'),i={name:"config/directives.md"},p=a(`<h1 id="directives" tabindex="-1">Directives <a class="header-anchor" href="#directives" aria-hidden="true">#</a></h1><h2 id="directives-1" tabindex="-1">Directives <a class="header-anchor" href="#directives-1" aria-hidden="true">#</a></h2><p>Directives gives a diagram author the capability to alter the appearance of a diagram before rendering by changing the applied configuration.</p><p>The significance of having directives is that you have them available while writing the diagram, and can modify the default global and diagram specific configurations. So, directives are applied on top of the default configurations. The beauty of directives is that you can use them to alter configuration settings for a specific diagram, i.e. at an individual level.</p><p>While directives allow you to change most of the default configuration settings, there are some that are not available, that too for security reasons. Also, you do have the <em>option to define the set of configurations</em> that you would allow to be available to the diagram author for overriding with help of directives.</p><h2 id="types-of-directives-options" tabindex="-1">Types of Directives options <a class="header-anchor" href="#types-of-directives-options" aria-hidden="true">#</a></h2><p>Mermaid basically supports two types of configuration options to be overridden by directives.</p><ol><li><em>General/Top Level configurations</em> : These are the configurations that are available and applied to all the diagram. <strong>Some of the most important top-level</strong> configurations are:</li></ol><ul><li>theme</li><li>fontFamily</li><li>logLevel</li><li>securityLevel</li><li>startOnLoad</li><li>secure</li></ul><ol start="2"><li><em>Diagram specific configurations</em> : These are the configurations that are available and applied to a specific diagram. For each diagram there are specific configuration that will alter how that particular diagram looks and behaves. For example, <code>mirrorActors</code> is a configuration that is specific to the <code>SequenceDiagram</code> and alter whether the actors are mirrored or not. So this config is available only for the <code>SequenceDiagram</code> type.</li></ol><p><strong>NOTE:</strong> These options listed here are not all the configuration options. To get hold of all the configuration options, please refer to the <a href="https://github.com/mermaid-js/mermaid/blob/develop/src/defaultConfig.js" target="_blank" rel="noreferrer">defaultConfig.js</a> in the source code.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">Soon we plan to publish a complete list of top-level configurations &amp; all the diagram specific configurations, with their possible values in the docs</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="declaring-directives" tabindex="-1">Declaring directives <a class="header-anchor" href="#declaring-directives" aria-hidden="true">#</a></h2><p>Now that we have defined the types of configurations that are available, we can learn how to declare directives. A directive always starts and end <code>%%</code> sign with directive text in between, like <code>%% {directive_text} %%</code>.</p><p>Here the structure of a directive text is like a nested key-value pair map or a JSON object with root being <em>init</em>. Where all the general configurations are defined in the top level, and all the diagram specific configurations are defined one level deeper with diagram type as key/root for that section.</p><p>Following code snippet shows the structure of a directive:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">%%{</span></span>
<span class="line"><span style="color:#A6ACCD;">  init: {</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;theme&quot;: &quot;dark&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;fontFamily&quot;: &quot;monospace&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;logLevel&quot;: &quot;info&quot;,</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;flowchart&quot;: {</span></span>
<span class="line"><span style="color:#A6ACCD;">      &quot;htmlLabels&quot;: true,</span></span>
<span class="line"><span style="color:#A6ACCD;">      &quot;curve&quot;: &quot;linear&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    },</span></span>
<span class="line"><span style="color:#A6ACCD;">    &quot;sequence&quot;: {</span></span>
<span class="line"><span style="color:#A6ACCD;">      &quot;mirrorActors&quot;: true</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;">}%%</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>You can also define the directives in a single line, like this:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">%%{init: { **insert argument here**}}%%</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>For example, the following code snippet:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">%%{init: { &quot;sequence&quot;: { &quot;mirrorActors&quot;:false }}}%%</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>Notes:</strong> The json object that is passed as {<strong>argument</strong> } must be valid key value pairs and encased in quotation marks or it will be ignored. Valid Key Value pairs can be found in config.</p><p>Example with a simple graph:</p><h5>Code:</h5><div class="language-mermaid"><button class="copy"></button><span class="lang">mermaid</span><pre class="shiki" style="background-color:transparent;"><code><span class="line"><span style="color:#A6ACCD;">%%{init: { &#39;logLevel&#39;: &#39;debug&#39;, &#39;theme&#39;: &#39;dark&#39; } }%%</span></span>
<span class="line"><span style="color:#89DDFF;">graph</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">LR</span></span>
<span class="line"><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">--&gt;</span><span style="color:#A6ACCD;">B</span></span>
<span class="line"></span></code></pre></div><h5>Render:</h5>`,26),c=a(`<p>Here the directive declaration will set the <code>logLevel</code> to <code>debug</code> and the <code>theme</code> to <code>dark</code> for a rendered mermaid diagram, changing the appearance of the diagram itself.</p><p>Note: You can use &#39;init&#39; or &#39;initialize&#39; as both acceptable as init directives. Also note that <code>%%init%%</code> and <code>%%initialize%%</code> directives will be grouped together after they are parsed. This means:</p><div class="language-mermaid"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre><code><span class="line"><span style="color:#A6ACCD;">%%{init: { &#39;logLevel&#39;: &#39;debug&#39;, &#39;theme&#39;: &#39;forest&#39; } }%%</span></span>
<span class="line"><span style="color:#A6ACCD;">%%{initialize: { &#39;logLevel&#39;: &#39;fatal&#39;, &quot;theme&quot;:&#39;dark&#39;, &#39;startOnLoad&#39;: true } }%%</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"></span></code></pre></div><p>parsing the above generates a single <code>%%init%%</code> JSON object below, combining the two directives and carrying over the last value given for <code>loglevel</code>:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">logLevel</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fatal</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">theme</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">dark</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">startOnLoad</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>This will then be sent to <code>mermaid.initialize(...)</code> for rendering.</p><h2 id="directive-examples" tabindex="-1">Directive Examples <a class="header-anchor" href="#directive-examples" aria-hidden="true">#</a></h2><p>More directive examples for diagram specific configuration overrides Now that the concept of directives has been explained, Let us see some more examples for directives usage:</p><h3 id="changing-theme-via-directive" tabindex="-1">Changing Theme via directive <a class="header-anchor" href="#changing-theme-via-directive" aria-hidden="true">#</a></h3><p>The following code snippet changes theme to forest:</p><p><code>%%{init: { &quot;theme&quot;: &quot;forest&quot; } }%%</code></p><p>Possible themes value are: <code>default</code>,<code>base</code>, <code>dark</code>, <code>forest</code> and <code>neutral</code>. Default Value is <code>default</code>.</p><p>Example:</p><h5>Code:</h5><div class="language-mermaid"><button class="copy"></button><span class="lang">mermaid</span><pre class="shiki" style="background-color:transparent;"><code><span class="line"><span style="color:#A6ACCD;">%%{init: { &quot;theme&quot;: &quot;forest&quot; } }%%</span></span>
<span class="line"><span style="color:#89DDFF;">graph</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TD</span></span>
<span class="line"><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">Forest</span><span style="color:#89DDFF;">) --&gt;</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">/Another/</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">A </span><span style="color:#89DDFF;">--&gt;</span><span style="color:#A6ACCD;"> C</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">End</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">subgraph</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">section</span></span>
<span class="line"><span style="color:#A6ACCD;">  B</span></span>
<span class="line"><span style="color:#A6ACCD;">  C</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">end</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h5>Render:</h5>`,16),r=a(`<h3 id="changing-fontfamily-via-directive" tabindex="-1">Changing fontFamily via directive <a class="header-anchor" href="#changing-fontfamily-via-directive" aria-hidden="true">#</a></h3><p>The following code snippet changes fontFamily to rebuchet MS, Verdana, Arial, Sans-Serif:</p><p><code>%%{init: { &quot;fontFamily&quot;: &quot;Trebuchet MS, Verdana, Arial, Sans-Serif&quot; } }%%</code></p><p>Example:</p><h5>Code:</h5><div class="language-mermaid"><button class="copy"></button><span class="lang">mermaid</span><pre class="shiki" style="background-color:transparent;"><code><span class="line"><span style="color:#A6ACCD;">%%{init: { &quot;fontFamily&quot;: &quot;Trebuchet MS, Verdana, Arial, Sans-Serif&quot; } }%%</span></span>
<span class="line"><span style="color:#89DDFF;">graph</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TD</span></span>
<span class="line"><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">Forest</span><span style="color:#89DDFF;">) --&gt;</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">/Another/</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">A </span><span style="color:#89DDFF;">--&gt;</span><span style="color:#A6ACCD;"> C</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">End</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">subgraph</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">section</span></span>
<span class="line"><span style="color:#A6ACCD;">  B</span></span>
<span class="line"><span style="color:#A6ACCD;">  C</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">end</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h5>Render:</h5>`,7),d=a(`<h3 id="changing-loglevel-via-directive" tabindex="-1">Changing logLevel via directive <a class="header-anchor" href="#changing-loglevel-via-directive" aria-hidden="true">#</a></h3><p>The following code snippet changes logLevel to 2:</p><p><code>%%{init: { &quot;logLevel&quot;: 2 } }%%</code></p><p>Possible logLevel values are:</p><ul><li><code>1</code> for <em>debug</em>,</li><li><code>2</code> for <em>info</em></li><li><code>3</code> for <em>warn</em></li><li><code>4</code> for <em>error</em></li><li><code>5</code> for <em>only fatal errors</em></li></ul><p>Default Value is <code>5</code>.</p><p>Example:</p><h5>Code:</h5><div class="language-mermaid"><button class="copy"></button><span class="lang">mermaid</span><pre class="shiki" style="background-color:transparent;"><code><span class="line"><span style="color:#A6ACCD;">%%{init: { &quot;logLevel&quot;: 2 } }%%</span></span>
<span class="line"><span style="color:#89DDFF;">graph</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TD</span></span>
<span class="line"><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">Forest</span><span style="color:#89DDFF;">) --&gt;</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">/Another/</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">A </span><span style="color:#89DDFF;">--&gt;</span><span style="color:#A6ACCD;"> C</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">End</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">subgraph</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">section</span></span>
<span class="line"><span style="color:#A6ACCD;">  B</span></span>
<span class="line"><span style="color:#A6ACCD;">  C</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">end</span></span>
<span class="line"></span></code></pre></div><h5>Render:</h5>`,10),h=a(`<h3 id="changing-flowchart-config-via-directive" tabindex="-1">Changing flowchart config via directive <a class="header-anchor" href="#changing-flowchart-config-via-directive" aria-hidden="true">#</a></h3><p>Some common flowchart configurations are:</p><ul><li><em>htmlLabels</em>: true/false</li><li><em>curve</em>: linear/curve</li><li><em>diagramPadding</em>: number</li><li><em>useMaxWidth</em>: number</li></ul><p>For complete list of flowchart configurations, see <a href="https://github.com/mermaid-js/mermaid/blob/develop/src/defaultConfig.js" target="_blank" rel="noreferrer">defaultConfig.js</a> in the source code. <em>Soon we plan to publish a complete list all diagram specific configurations updated in the docs</em></p><p>The following code snippet changes flowchart config:</p><p><code>%%{init: { &quot;flowchart&quot;: { &quot;htmlLabels&quot;: true, &quot;curve&quot;: &quot;linear&quot; } } }%%</code></p><p>Here were are overriding only the flowchart config, and not the general config, where HtmlLabels is set to true and curve is set to linear.</p><h5>Code:</h5><div class="language-mermaid"><button class="copy"></button><span class="lang">mermaid</span><pre class="shiki" style="background-color:transparent;"><code><span class="line"><span style="color:#A6ACCD;">%%{init: { &quot;flowchart&quot;: { &quot;htmlLabels&quot;: true, &quot;curve&quot;: &quot;linear&quot; } } }%%</span></span>
<span class="line"><span style="color:#89DDFF;">graph</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">TD</span></span>
<span class="line"><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">Forest</span><span style="color:#89DDFF;">) --&gt;</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">/Another/</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">A </span><span style="color:#89DDFF;">--&gt;</span><span style="color:#A6ACCD;"> C</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">End</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">subgraph</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">section</span></span>
<span class="line"><span style="color:#A6ACCD;">  B</span></span>
<span class="line"><span style="color:#A6ACCD;">  C</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">end</span></span>
<span class="line"></span></code></pre></div><h5>Render:</h5>`,10),A=a(`<h3 id="changing-sequence-diagram-config-via-directive" tabindex="-1">Changing Sequence diagram config via directive <a class="header-anchor" href="#changing-sequence-diagram-config-via-directive" aria-hidden="true">#</a></h3><p>Some common sequence configurations are:</p><ul><li><em>width</em>: number</li><li><em>height</em>: number</li><li><em>messageAlign</em>: left, center, right</li><li><em>mirrorActors</em>: boolean</li><li><em>useMaxWidth</em>: boolean</li><li><em>rightAngles</em>: boolean</li><li><em>showSequenceNumbers</em>: boolean</li><li><em>wrap</em>: boolean</li></ul><p>For complete list of sequence diagram configurations, see <em>defaultConfig.js</em> in the source code. <em>Soon we plan to publish a complete list all diagram specific configurations updated in the docs</em></p><p>So, <code>wrap</code> by default has a value of <code>false</code> for sequence diagrams.</p><p>Let us see an example:</p><h5>Code:</h5><div class="language-mermaid"><button class="copy"></button><span class="lang">mermaid</span><pre class="shiki" style="background-color:transparent;"><code><span class="line"><span style="color:#89DDFF;">sequenceDiagram</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Alice</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">Bob</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Hello Bob, how are you?</span></span>
<span class="line"><span style="color:#A6ACCD;">Bob</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">Alice</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Fine, How did you mother like the book I suggested? And did you catch with the new book about alien invasion?</span></span>
<span class="line"><span style="color:#A6ACCD;">Alice</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">Bob</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Good.</span></span>
<span class="line"><span style="color:#A6ACCD;">Bob</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">Alice</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Cool</span></span>
<span class="line"></span></code></pre></div><h5>Render:</h5>`,9),g=a(`<p>Now let us enable wrap for sequence diagrams.</p><p>The following code snippet changes sequence diagram config for <code>wrap</code> to <code>true</code>:</p><p><code>%%{init: { &quot;sequence&quot;: { &quot;wrap&quot;: true} } }%%</code></p><p>Using in the diagram above, the wrap will be enabled.</p><h5>Code:</h5><div class="language-mermaid"><button class="copy"></button><span class="lang">mermaid</span><pre class="shiki" style="background-color:transparent;"><code><span class="line"><span style="color:#A6ACCD;">%%{init: { &quot;sequence&quot;: { &quot;wrap&quot;: true, &quot;width&quot;:300 } } }%%</span></span>
<span class="line"><span style="color:#89DDFF;">sequenceDiagram</span></span>
<span class="line"><span style="color:#A6ACCD;">Alice</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">Bob</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Hello Bob, how are you?</span></span>
<span class="line"><span style="color:#A6ACCD;">Bob</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">Alice</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Fine, How did you mother like the book I suggested? And did you catch with the new book about alien invasion?</span></span>
<span class="line"><span style="color:#A6ACCD;">Alice</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">Bob</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Good.</span></span>
<span class="line"><span style="color:#A6ACCD;">Bob</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">Alice</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Cool</span></span>
<span class="line"></span></code></pre></div><h5>Render:</h5>`,7);function u(D,C,y,m,v,F){const e=t("Mermaid");return o(),l("div",null,[p,s(e,{id:"me98",graph:"%25%25%7Binit%3A%20%7B%20'logLevel'%3A%20'debug'%2C%20'theme'%3A%20'dark'%20%7D%20%7D%25%25%0Agraph%20LR%0AA--%3EB%0A"}),c,s(e,{id:"me134",graph:"%25%25%7Binit%3A%20%7B%20%22theme%22%3A%20%22forest%22%20%7D%20%7D%25%25%0Agraph%20TD%0AA(Forest)%20--%3E%20B%5B%2FAnother%2F%5D%0AA%20--%3E%20C%5BEnd%5D%0A%20%20subgraph%20section%0A%20%20B%0A%20%20C%0A%20%20end%0A%0A"}),r,s(e,{id:"me147",graph:"%25%25%7Binit%3A%20%7B%20%22fontFamily%22%3A%20%22Trebuchet%20MS%2C%20Verdana%2C%20Arial%2C%20Sans-Serif%22%20%7D%20%7D%25%25%0Agraph%20TD%0AA(Forest)%20--%3E%20B%5B%2FAnother%2F%5D%0AA%20--%3E%20C%5BEnd%5D%0A%20%20subgraph%20section%0A%20%20B%0A%20%20C%0A%20%20end%0A%0A"}),d,s(e,{id:"me193",graph:"%25%25%7Binit%3A%20%7B%20%22logLevel%22%3A%202%20%7D%20%7D%25%25%0Agraph%20TD%0AA(Forest)%20--%3E%20B%5B%2FAnother%2F%5D%0AA%20--%3E%20C%5BEnd%5D%0A%20%20subgraph%20section%0A%20%20B%0A%20%20C%0A%20%20end%0A"}),h,s(e,{id:"me234",graph:"%25%25%7Binit%3A%20%7B%20%22flowchart%22%3A%20%7B%20%22htmlLabels%22%3A%20true%2C%20%22curve%22%3A%20%22linear%22%20%7D%20%7D%20%7D%25%25%0Agraph%20TD%0AA(Forest)%20--%3E%20B%5B%2FAnother%2F%5D%0AA%20--%3E%20C%5BEnd%5D%0A%20%20subgraph%20section%0A%20%20B%0A%20%20C%0A%20%20end%0A"}),A,s(e,{id:"me292",graph:"sequenceDiagram%0A%0AAlice-%3EBob%3A%20Hello%20Bob%2C%20how%20are%20you%3F%0ABob-%3EAlice%3A%20Fine%2C%20How%20did%20you%20mother%20like%20the%20book%20I%20suggested%3F%20And%20did%20you%20catch%20with%20the%20new%20book%20about%20alien%20invasion%3F%0AAlice-%3EBob%3A%20Good.%0ABob-%3EAlice%3A%20Cool%0A"}),g,s(e,{id:"me305",graph:"%25%25%7Binit%3A%20%7B%20%22sequence%22%3A%20%7B%20%22wrap%22%3A%20true%2C%20%22width%22%3A300%20%7D%20%7D%20%7D%25%25%0AsequenceDiagram%0AAlice-%3EBob%3A%20Hello%20Bob%2C%20how%20are%20you%3F%0ABob-%3EAlice%3A%20Fine%2C%20How%20did%20you%20mother%20like%20the%20book%20I%20suggested%3F%20And%20did%20you%20catch%20with%20the%20new%20book%20about%20alien%20invasion%3F%0AAlice-%3EBob%3A%20Good.%0ABob-%3EAlice%3A%20Cool%0A"})])}const _=n(i,[["render",u]]);export{b as __pageData,_ as default};
