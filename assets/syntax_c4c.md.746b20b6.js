import{_ as a,c as t,b as s,a as n,o,r as l}from"./app.b546739e.js";const f=JSON.parse('{"title":"C4 Diagrams","description":"","frontmatter":{},"headers":[{"level":2,"title":"C4 System Context Diagram (C4Context)","slug":"c4-system-context-diagram-c4context","link":"#c4-system-context-diagram-c4context","children":[]},{"level":2,"title":"C4 Container diagram (C4Container)","slug":"c4-container-diagram-c4container","link":"#c4-container-diagram-c4container","children":[]},{"level":2,"title":"C4 Component diagram (C4Component)","slug":"c4-component-diagram-c4component","link":"#c4-component-diagram-c4component","children":[]},{"level":2,"title":"C4 Dynamic diagram (C4Dynamic)","slug":"c4-dynamic-diagram-c4dynamic","link":"#c4-dynamic-diagram-c4dynamic","children":[]},{"level":2,"title":"C4 Deployment diagram (C4Deployment)","slug":"c4-deployment-diagram-c4deployment","link":"#c4-deployment-diagram-c4deployment","children":[]}],"relativePath":"syntax/c4c.md"}'),i={name:"syntax/c4c.md"},p=n(`<h1 id="c4-diagrams" tabindex="-1">C4 Diagrams <a class="header-anchor" href="#c4-diagrams" aria-hidden="true">#</a></h1><blockquote><p>C4 Diagram: This is an experimental diagram for now. The syntax and properties can change in future releases. Proper documentation will be provided when the syntax is stable.</p></blockquote><p>Mermaid&#39;s c4 diagram syntax is compatible with plantUML. See example below:</p><h5>Code:</h5><div class="language-mermaid"><button class="copy"></button><span class="lang">mermaid</span><pre class="shiki" style="background-color:transparent;"><code><span class="line"><span style="color:#A6ACCD;">    C4Context</span></span>
<span class="line"><span style="color:#A6ACCD;">      title System Context diagram for Internet Banking System</span></span>
<span class="line"><span style="color:#A6ACCD;">      Enterprise_Boundary(b0, &quot;BankBoundary0&quot;) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        Person(customerA, &quot;Banking Customer A&quot;, &quot;A customer of the bank, with personal bank accounts.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        Person(customerB, &quot;Banking Customer B&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        Person_Ext(customerC, &quot;Banking Customer C&quot;, &quot;desc&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        Person(customerD, &quot;Banking Customer D&quot;, &quot;A customer of the bank, &lt;br/&gt; with personal bank accounts.&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        System(SystemAA, &quot;Internet Banking System&quot;, &quot;Allows customers to view information about their bank accounts, and make payments.&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        Enterprise_Boundary(b1, &quot;BankBoundary&quot;) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">          SystemDb_Ext(SystemE, &quot;Mainframe Banking System&quot;, &quot;Stores all of the core banking information about customers, accounts, transactions, etc.&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">          System_Boundary(b2, &quot;BankBoundary2&quot;) {</span></span>
<span class="line"><span style="color:#A6ACCD;">            System(SystemA, &quot;Banking System A&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">            System(SystemB, &quot;Banking System B&quot;, &quot;A system of the bank, with personal bank accounts. next line.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">          }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">          System_Ext(SystemC, &quot;E-mail system&quot;, &quot;The internal Microsoft Exchange e-mail system.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">          SystemDb(SystemD, &quot;Banking System D Database&quot;, &quot;A system of the bank, with personal bank accounts.&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">          Boundary(b3, &quot;BankBoundary3&quot;, &quot;boundary&quot;) {</span></span>
<span class="line"><span style="color:#A6ACCD;">            SystemQueue(SystemF, &quot;Banking System F Queue&quot;, &quot;A system of the bank.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">            SystemQueue_Ext(SystemG, &quot;Banking System G Queue&quot;, &quot;A system of the bank, with personal bank accounts.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">          }</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      BiRel(customerA, SystemAA, &quot;Uses&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      BiRel(SystemAA, SystemE, &quot;Uses&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      Rel(SystemAA, SystemC, &quot;Sends e-mails&quot;, &quot;SMTP&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      Rel(SystemC, customerA, &quot;Sends e-mails to&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      UpdateElementStyle(customerA, $fontColor=&quot;red&quot;, $bgColor=&quot;grey&quot;, $borderColor=&quot;red&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      UpdateRelStyle(customerA, SystemAA, $textColor=&quot;blue&quot;, $lineColor=&quot;blue&quot;, $offsetX=&quot;5&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      UpdateRelStyle(SystemAA, SystemE, $textColor=&quot;blue&quot;, $lineColor=&quot;blue&quot;, $offsetY=&quot;-10&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      UpdateRelStyle(SystemAA, SystemC, $textColor=&quot;blue&quot;, $lineColor=&quot;blue&quot;, $offsetY=&quot;-40&quot;, $offsetX=&quot;-50&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      UpdateRelStyle(SystemC, customerA, $textColor=&quot;red&quot;, $lineColor=&quot;red&quot;, $offsetX=&quot;-50&quot;, $offsetY=&quot;20&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      UpdateLayoutConfig($c4ShapeInRow=&quot;3&quot;, $c4BoundaryInRow=&quot;1&quot;)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h5>Render:</h5>`,6),r=n(`<p>For an example, see the source code demos/index.html</p><p>5 types of C4 charts are supported.</p><ul><li>System Context (C4Context)</li><li>Container diagram (C4Container)</li><li>Component diagram (C4Component)</li><li>Dynamic diagram (C4Dynamic)</li><li>Deployment diagram (C4Deployment)</li></ul><p>Please refer to the linked document <a href="https://github.com/plantuml-stdlib/C4-PlantUML/blob/master/README.md" target="_blank" rel="noreferrer">C4-PlantUML syntax</a> for how to write the c4 diagram.</p><p>C4 diagram is fixed style, such as css color, so different css is not provided under different skins. updateElementStyle and UpdateElementStyle are written in the diagram last part. updateElementStyle is inconsistent with the original definition and updates the style of the relationship, including the offset of the text label relative to the original position.</p><p>The layout does not use a fully automated layout algorithm. The position of shapes is adjusted by changing the order in which statements are written. So there is no plan to support the following Layout statements. The number of shapes per row and the number of boundaries can be adjusted using UpdateLayoutConfig.</p><ul><li>Layout</li><li><ul><li>Lay_U, Lay_Up</li></ul></li><li><ul><li>Lay_D, Lay_Down</li></ul></li><li><ul><li>Lay_L, Lay_Left</li></ul></li><li><ul><li>Lay_R, Lay_Right</li></ul></li></ul><p>The following unfinished features are not supported in the short term.</p><ul><li><p>[ ] sprite</p></li><li><p>[ ] tags</p></li><li><p>[ ] link</p></li><li><p>[ ] Legend</p></li><li><p>[x] System Context</p></li><li><ul><li>[x] Person(alias, label, ?descr, ?sprite, ?tags, $link)</li></ul></li><li><ul><li>[x] Person_Ext</li></ul></li><li><ul><li>[x] System(alias, label, ?descr, ?sprite, ?tags, $link)</li></ul></li><li><ul><li>[x] SystemDb</li></ul></li><li><ul><li>[x] SystemQueue</li></ul></li><li><ul><li>[x] System_Ext</li></ul></li><li><ul><li>[x] SystemDb_Ext</li></ul></li><li><ul><li>[x] SystemQueue_Ext</li></ul></li><li><ul><li>[x] Boundary(alias, label, ?type, ?tags, $link)</li></ul></li><li><ul><li>[x] Enterprise_Boundary(alias, label, ?tags, $link)</li></ul></li><li><ul><li>[x] System_Boundary</li></ul></li><li><p>[x] Container diagram</p></li><li><ul><li>[x] Container(alias, label, ?techn, ?descr, ?sprite, ?tags, $link)</li></ul></li><li><ul><li>[x] ContainerDb</li></ul></li><li><ul><li>[x] ContainerQueue</li></ul></li><li><ul><li>[x] Container_Ext</li></ul></li><li><ul><li>[x] ContainerDb_Ext</li></ul></li><li><ul><li>[x] ContainerQueue_Ext</li></ul></li><li><ul><li>[x] Container_Boundary(alias, label, ?tags, $link)</li></ul></li><li><p>[x] Component diagram</p></li><li><ul><li>[x] Component(alias, label, ?techn, ?descr, ?sprite, ?tags, $link)</li></ul></li><li><ul><li>[x] ComponentDb</li></ul></li><li><ul><li>[x] ComponentQueue</li></ul></li><li><ul><li>[x] Component_Ext</li></ul></li><li><ul><li>[x] ComponentDb_Ext</li></ul></li><li><ul><li>[x] ComponentQueue_Ext</li></ul></li><li><p>[x] Dynamic diagram</p></li><li><ul><li>[x] RelIndex(index, from, to, label, ?tags, $link)</li></ul></li><li><p>[x] Deployment diagram</p></li><li><ul><li>[x] Deployment_Node(alias, label, ?type, ?descr, ?sprite, ?tags, $link)</li></ul></li><li><ul><li>[x] Node(alias, label, ?type, ?descr, ?sprite, ?tags, $link): short name of Deployment_Node()</li></ul></li><li><ul><li>[x] Node_L(alias, label, ?type, ?descr, ?sprite, ?tags, $link): left aligned Node()</li></ul></li><li><ul><li>[x] Node_R(alias, label, ?type, ?descr, ?sprite, ?tags, $link): right aligned Node()</li></ul></li><li><p>[x] Relationship Types</p></li><li><ul><li>[x] Rel(from, to, label, ?techn, ?descr, ?sprite, ?tags, $link)</li></ul></li><li><ul><li>[x] BiRel (bidirectional relationship)</li></ul></li><li><ul><li>[x] Rel_U, Rel_Up</li></ul></li><li><ul><li>[x] Rel_D, Rel_Down</li></ul></li><li><ul><li>[x] Rel_L, Rel_Left</li></ul></li><li><ul><li>[x] Rel_R, Rel_Right</li></ul></li><li><ul><li>[x] Rel_Back</li></ul></li><li><ul><li>[x] RelIndex * Compatible with C4-Plantuml syntax, but ignores the index parameter. The sequence number is determined by the order in which the rel statements are written.</li></ul></li><li><p>[ ] Custom tags/stereotypes support and skinparam updates</p></li><li><ul><li>[ ] AddElementTag(tagStereo, ?bgColor, ?fontColor, ?borderColor, ?shadowing, ?shape, ?sprite, ?techn, ?legendText, ?legendSprite): Introduces a new element tag. The styles of the tagged elements are updated and the tag is displayed in the calculated legend.</li></ul></li><li><ul><li>[ ] AddRelTag(tagStereo, ?textColor, ?lineColor, ?lineStyle, ?sprite, ?techn, ?legendText, ?legendSprite): Introduces a new Relationship tag. The styles of the tagged relationships are updated and the tag is displayed in the calculated legend.</li></ul></li><li><ul><li>[x] UpdateElementStyle(elementName, ?bgColor, ?fontColor, ?borderColor, ?shadowing, ?shape, ?sprite, ?techn, ?legendText, ?legendSprite): This call updates the default style of the elements (component, ...) and creates no additional legend entry.</li></ul></li><li><ul><li>[x] UpdateRelStyle(from, to, ?textColor, ?lineColor, ?offsetX, ?offsetY): This call updates the default relationship colors and creates no additional legend entry. Two new parameters, offsetX and offsetY, are added to set the offset of the original position of the text.</li></ul></li><li><ul><li>[ ] RoundedBoxShape(): This call returns the name of the rounded box shape and can be used as ?shape argument.</li></ul></li><li><ul><li>[ ] EightSidedShape(): This call returns the name of the eight sided shape and can be used as ?shape argument.</li></ul></li><li><ul><li>[ ] DashedLine(): This call returns the name of the dashed line and can be used as ?lineStyle argument.</li></ul></li><li><ul><li>[ ] DottedLine(): This call returns the name of the dotted line and can be used as ?lineStyle argument.</li></ul></li><li><ul><li>[ ] BoldLine(): This call returns the name of the bold line and can be used as ?lineStyle argument.</li></ul></li><li><ul><li>[x] UpdateLayoutConfig(?c4ShapeInRow, ?c4BoundaryInRow): New. This call updates the default c4ShapeInRow(4) and c4BoundaryInRow(2).</li></ul></li></ul><p>There are two ways to assign parameters with question marks. One uses the non-named parameter assignment method in the order of the parameters, and the other uses the named parameter assignment method, where the name must start with a $ symbol.</p><p>Example: UpdateRelStyle(from, to, ?textColor, ?lineColor, ?offsetX, ?offsetY)</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">UpdateRelStyle(customerA, bankA, &quot;red&quot;, &quot;blue&quot;, &quot;-40&quot;, &quot;60&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">UpdateRelStyle(customerA, bankA, $offsetX=&quot;-40&quot;, $offsetY=&quot;60&quot;, $lineColor=&quot;blue&quot;, $textColor=&quot;red&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">UpdateRelStyle(customerA, bankA, $offsetY=&quot;60&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="c4-system-context-diagram-c4context" tabindex="-1">C4 System Context Diagram (C4Context) <a class="header-anchor" href="#c4-system-context-diagram-c4context" aria-hidden="true">#</a></h2><h5>Code:</h5><div class="language-mermaid"><button class="copy"></button><span class="lang">mermaid</span><pre class="shiki" style="background-color:transparent;"><code><span class="line"><span style="color:#A6ACCD;">    C4Context</span></span>
<span class="line"><span style="color:#A6ACCD;">      title System Context diagram for Internet Banking System</span></span>
<span class="line"><span style="color:#A6ACCD;">      Enterprise_Boundary(b0, &quot;BankBoundary0&quot;) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        Person(customerA, &quot;Banking Customer A&quot;, &quot;A customer of the bank, with personal bank accounts.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        Person(customerB, &quot;Banking Customer B&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        Person_Ext(customerC, &quot;Banking Customer C&quot;, &quot;desc&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        Person(customerD, &quot;Banking Customer D&quot;, &quot;A customer of the bank, &lt;br/&gt; with personal bank accounts.&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        System(SystemAA, &quot;Internet Banking System&quot;, &quot;Allows customers to view information about their bank accounts, and make payments.&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        Enterprise_Boundary(b1, &quot;BankBoundary&quot;) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">          SystemDb_Ext(SystemE, &quot;Mainframe Banking System&quot;, &quot;Stores all of the core banking information about customers, accounts, transactions, etc.&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">          System_Boundary(b2, &quot;BankBoundary2&quot;) {</span></span>
<span class="line"><span style="color:#A6ACCD;">            System(SystemA, &quot;Banking System A&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">            System(SystemB, &quot;Banking System B&quot;, &quot;A system of the bank, with personal bank accounts. next line.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">          }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">          System_Ext(SystemC, &quot;E-mail system&quot;, &quot;The internal Microsoft Exchange e-mail system.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">          SystemDb(SystemD, &quot;Banking System D Database&quot;, &quot;A system of the bank, with personal bank accounts.&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">          Boundary(b3, &quot;BankBoundary3&quot;, &quot;boundary&quot;) {</span></span>
<span class="line"><span style="color:#A6ACCD;">            SystemQueue(SystemF, &quot;Banking System F Queue&quot;, &quot;A system of the bank.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">            SystemQueue_Ext(SystemG, &quot;Banking System G Queue&quot;, &quot;A system of the bank, with personal bank accounts.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">          }</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      BiRel(customerA, SystemAA, &quot;Uses&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      BiRel(SystemAA, SystemE, &quot;Uses&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      Rel(SystemAA, SystemC, &quot;Sends e-mails&quot;, &quot;SMTP&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      Rel(SystemC, customerA, &quot;Sends e-mails to&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      UpdateElementStyle(customerA, $fontColor=&quot;red&quot;, $bgColor=&quot;grey&quot;, $borderColor=&quot;red&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      UpdateRelStyle(customerA, SystemAA, $textColor=&quot;blue&quot;, $lineColor=&quot;blue&quot;, $offsetX=&quot;5&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      UpdateRelStyle(SystemAA, SystemE, $textColor=&quot;blue&quot;, $lineColor=&quot;blue&quot;, $offsetY=&quot;-10&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      UpdateRelStyle(SystemAA, SystemC, $textColor=&quot;blue&quot;, $lineColor=&quot;blue&quot;, $offsetY=&quot;-40&quot;, $offsetX=&quot;-50&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      UpdateRelStyle(SystemC, customerA, $textColor=&quot;red&quot;, $lineColor=&quot;red&quot;, $offsetX=&quot;-50&quot;, $offsetY=&quot;20&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      UpdateLayoutConfig($c4ShapeInRow=&quot;3&quot;, $c4BoundaryInRow=&quot;1&quot;)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h5>Render:</h5>`,16),u=n(`<h2 id="c4-container-diagram-c4container" tabindex="-1">C4 Container diagram (C4Container) <a class="header-anchor" href="#c4-container-diagram-c4container" aria-hidden="true">#</a></h2><h5>Code:</h5><div class="language-mermaid"><button class="copy"></button><span class="lang">mermaid</span><pre class="shiki" style="background-color:transparent;"><code><span class="line"><span style="color:#A6ACCD;">    C4Container</span></span>
<span class="line"><span style="color:#A6ACCD;">    title Container diagram for Internet Banking System</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    System_Ext(email_system, &quot;E-Mail System&quot;, &quot;The internal Microsoft Exchange system&quot;, $tags=&quot;v1.0&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Person(customer, Customer, &quot;A customer of the bank, with personal bank accounts&quot;, $tags=&quot;v1.0&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    Container_Boundary(c1, &quot;Internet Banking&quot;) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        Container(spa, &quot;Single-Page App&quot;, &quot;JavaScript, Angular&quot;, &quot;Provides all the Internet banking functionality to cutomers via their web browser&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        Container_Ext(mobile_app, &quot;Mobile App&quot;, &quot;C#, Xamarin&quot;, &quot;Provides a limited subset of the Internet banking functionality to customers via their mobile device&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        Container(web_app, &quot;Web Application&quot;, &quot;Java, Spring MVC&quot;, &quot;Delivers the static content and the Internet banking SPA&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        ContainerDb(database, &quot;Database&quot;, &quot;SQL Database&quot;, &quot;Stores user registration information, hashed auth credentials, access logs, etc.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        ContainerDb_Ext(backend_api, &quot;API Application&quot;, &quot;Java, Docker Container&quot;, &quot;Provides Internet banking functionality via API&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    System_Ext(banking_system, &quot;Mainframe Banking System&quot;, &quot;Stores all of the core banking information about customers, accounts, transactions, etc.&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(customer, web_app, &quot;Uses&quot;, &quot;HTTPS&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(customer, web_app, $offsetY=&quot;60&quot;, $offsetX=&quot;90&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(customer, spa, &quot;Uses&quot;, &quot;HTTPS&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(customer, spa, $offsetY=&quot;-40&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(customer, mobile_app, &quot;Uses&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(customer, mobile_app, $offsetY=&quot;-30&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(web_app, spa, &quot;Delivers&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(web_app, spa, $offsetX=&quot;130&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(spa, backend_api, &quot;Uses&quot;, &quot;async, JSON/HTTPS&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(mobile_app, backend_api, &quot;Uses&quot;, &quot;async, JSON/HTTPS&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel_Back(database, backend_api, &quot;Reads from and writes to&quot;, &quot;sync, JDBC&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(email_system, customer, &quot;Sends e-mails to&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(email_system, customer, $offsetX=&quot;-45&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(backend_api, email_system, &quot;Sends e-mails using&quot;, &quot;sync, SMTP&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(backend_api, email_system, $offsetY=&quot;-60&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(backend_api, banking_system, &quot;Uses&quot;, &quot;sync/async, XML/HTTPS&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(backend_api, banking_system, $offsetY=&quot;-50&quot;, $offsetX=&quot;-140&quot;)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h5>Render:</h5>`,4),c=n(`<h2 id="c4-component-diagram-c4component" tabindex="-1">C4 Component diagram (C4Component) <a class="header-anchor" href="#c4-component-diagram-c4component" aria-hidden="true">#</a></h2><h5>Code:</h5><div class="language-mermaid"><button class="copy"></button><span class="lang">mermaid</span><pre class="shiki" style="background-color:transparent;"><code><span class="line"><span style="color:#A6ACCD;">    C4Component</span></span>
<span class="line"><span style="color:#A6ACCD;">    title Component diagram for Internet Banking System - API Application</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    Container(spa, &quot;Single Page Application&quot;, &quot;javascript and angular&quot;, &quot;Provides all the internet banking functionality to customers via their web browser.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Container(ma, &quot;Mobile App&quot;, &quot;Xamarin&quot;, &quot;Provides a limited subset ot the internet banking functionality to customers via their mobile mobile device.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    ContainerDb(db, &quot;Database&quot;, &quot;Relational Database Schema&quot;, &quot;Stores user registration information, hashed authentication credentials, access logs, etc.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    System_Ext(mbs, &quot;Mainframe Banking System&quot;, &quot;Stores all of the core banking information about customers, accounts, transactions, etc.&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    Container_Boundary(api, &quot;API Application&quot;) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        Component(sign, &quot;Sign In Controller&quot;, &quot;MVC Rest Controller&quot;, &quot;Allows users to sign in to the internet banking system&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        Component(accounts, &quot;Accounts Summary Controller&quot;, &quot;MVC Rest Controller&quot;, &quot;Provides customers with a summary of their bank accounts&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        Component(security, &quot;Security Component&quot;, &quot;Spring Bean&quot;, &quot;Provides functionality related to singing in, changing passwords, etc.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        Component(mbsfacade, &quot;Mainframe Banking System Facade&quot;, &quot;Spring Bean&quot;, &quot;A facade onto the mainframe banking system.&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        Rel(sign, security, &quot;Uses&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        Rel(accounts, mbsfacade, &quot;Uses&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        Rel(security, db, &quot;Read &amp; write to&quot;, &quot;JDBC&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        Rel(mbsfacade, mbs, &quot;Uses&quot;, &quot;XML/HTTPS&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    Rel_Back(spa, sign, &quot;Uses&quot;, &quot;JSON/HTTPS&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(spa, accounts, &quot;Uses&quot;, &quot;JSON/HTTPS&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(ma, sign, &quot;Uses&quot;, &quot;JSON/HTTPS&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(ma, accounts, &quot;Uses&quot;, &quot;JSON/HTTPS&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(spa, sign, $offsetY=&quot;-40&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(spa, accounts, $offsetX=&quot;40&quot;, $offsetY=&quot;40&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(ma, sign, $offsetX=&quot;-90&quot;, $offsetY=&quot;40&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(ma, accounts, $offsetY=&quot;-40&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        UpdateRelStyle(sign, security, $offsetX=&quot;-160&quot;, $offsetY=&quot;10&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        UpdateRelStyle(accounts, mbsfacade, $offsetX=&quot;140&quot;, $offsetY=&quot;10&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        UpdateRelStyle(security, db, $offsetY=&quot;-40&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        UpdateRelStyle(mbsfacade, mbs, $offsetY=&quot;-40&quot;)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h5>Render:</h5>`,4),C=n(`<h2 id="c4-dynamic-diagram-c4dynamic" tabindex="-1">C4 Dynamic diagram (C4Dynamic) <a class="header-anchor" href="#c4-dynamic-diagram-c4dynamic" aria-hidden="true">#</a></h2><h5>Code:</h5><div class="language-mermaid"><button class="copy"></button><span class="lang">mermaid</span><pre class="shiki" style="background-color:transparent;"><code><span class="line"><span style="color:#A6ACCD;">    C4Dynamic</span></span>
<span class="line"><span style="color:#A6ACCD;">    title Dynamic diagram for Internet Banking System - API Application</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    ContainerDb(c4, &quot;Database&quot;, &quot;Relational Database Schema&quot;, &quot;Stores user registration information, hashed authentication credentials, access logs, etc.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Container(c1, &quot;Single-Page Application&quot;, &quot;JavaScript and Angular&quot;, &quot;Provides all of the Internet banking functionality to customers via their web browser.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Container_Boundary(b, &quot;API Application&quot;) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      Component(c3, &quot;Security Component&quot;, &quot;Spring Bean&quot;, &quot;Provides functionality Related to signing in, changing passwords, etc.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">      Component(c2, &quot;Sign In Controller&quot;, &quot;Spring MVC Rest Controller&quot;, &quot;Allows users to sign in to the Internet Banking System.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(c1, c2, &quot;Submits credentials to&quot;, &quot;JSON/HTTPS&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(c2, c3, &quot;Calls isAuthenticated() on&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(c3, c4, &quot;select * from users where username = ?&quot;, &quot;JDBC&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(c1, c2, $textColor=&quot;red&quot;, $offsetY=&quot;-40&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(c2, c3, $textColor=&quot;red&quot;, $offsetX=&quot;-40&quot;, $offsetY=&quot;60&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(c3, c4, $textColor=&quot;red&quot;, $offsetY=&quot;-40&quot;, $offsetX=&quot;10&quot;)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h5>Render:</h5>`,4),A=n(`<h2 id="c4-deployment-diagram-c4deployment" tabindex="-1">C4 Deployment diagram (C4Deployment) <a class="header-anchor" href="#c4-deployment-diagram-c4deployment" aria-hidden="true">#</a></h2><h5>Code:</h5><div class="language-mermaid"><button class="copy"></button><span class="lang">mermaid</span><pre class="shiki" style="background-color:transparent;"><code><span class="line"><span style="color:#A6ACCD;">    C4Deployment</span></span>
<span class="line"><span style="color:#A6ACCD;">    title Deployment Diagram for Internet Banking System - Live</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    Deployment_Node(mob, &quot;Customer&#39;s mobile device&quot;, &quot;Apple IOS or Android&quot;){</span></span>
<span class="line"><span style="color:#A6ACCD;">        Container(mobile, &quot;Mobile App&quot;, &quot;Xamarin&quot;, &quot;Provides a limited subset of the Internet Banking functionality to customers via their mobile device.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    Deployment_Node(comp, &quot;Customer&#39;s computer&quot;, &quot;Mircosoft Windows or Apple macOS&quot;){</span></span>
<span class="line"><span style="color:#A6ACCD;">        Deployment_Node(browser, &quot;Web Browser&quot;, &quot;Google Chrome, Mozilla Firefox,&lt;br/&gt; Apple Safari or Microsoft Edge&quot;){</span></span>
<span class="line"><span style="color:#A6ACCD;">            Container(spa, &quot;Single Page Application&quot;, &quot;JavaScript and Angular&quot;, &quot;Provides all of the Internet Banking functionality to customers via their web browser.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    Deployment_Node(plc, &quot;Big Bank plc&quot;, &quot;Big Bank plc data center&quot;){</span></span>
<span class="line"><span style="color:#A6ACCD;">        Deployment_Node(dn, &quot;bigbank-api*** x8&quot;, &quot;Ubuntu 16.04 LTS&quot;){</span></span>
<span class="line"><span style="color:#A6ACCD;">            Deployment_Node(apache, &quot;Apache Tomcat&quot;, &quot;Apache Tomcat 8.x&quot;){</span></span>
<span class="line"><span style="color:#A6ACCD;">                Container(api, &quot;API Application&quot;, &quot;Java and Spring MVC&quot;, &quot;Provides Internet Banking functionality via a JSON/HTTPS API.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">            }</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">        Deployment_Node(bb2, &quot;bigbank-web*** x4&quot;, &quot;Ubuntu 16.04 LTS&quot;){</span></span>
<span class="line"><span style="color:#A6ACCD;">            Deployment_Node(apache2, &quot;Apache Tomcat&quot;, &quot;Apache Tomcat 8.x&quot;){</span></span>
<span class="line"><span style="color:#A6ACCD;">                Container(web, &quot;Web Application&quot;, &quot;Java and Spring MVC&quot;, &quot;Delivers the static content and the Internet Banking single page application.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">            }</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">        Deployment_Node(bigbankdb01, &quot;bigbank-db01&quot;, &quot;Ubuntu 16.04 LTS&quot;){</span></span>
<span class="line"><span style="color:#A6ACCD;">            Deployment_Node(oracle, &quot;Oracle - Primary&quot;, &quot;Oracle 12c&quot;){</span></span>
<span class="line"><span style="color:#A6ACCD;">                ContainerDb(db, &quot;Database&quot;, &quot;Relational Database Schema&quot;, &quot;Stores user registration information, hashed authentication credentials, access logs, etc.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">            }</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">        Deployment_Node(bigbankdb02, &quot;bigbank-db02&quot;, &quot;Ubuntu 16.04 LTS&quot;) {</span></span>
<span class="line"><span style="color:#A6ACCD;">            Deployment_Node(oracle2, &quot;Oracle - Secondary&quot;, &quot;Oracle 12c&quot;) {</span></span>
<span class="line"><span style="color:#A6ACCD;">                ContainerDb(db2, &quot;Database&quot;, &quot;Relational Database Schema&quot;, &quot;Stores user registration information, hashed authentication credentials, access logs, etc.&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">            }</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(mobile, api, &quot;Makes API calls to&quot;, &quot;json/HTTPS&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(spa, api, &quot;Makes API calls to&quot;, &quot;json/HTTPS&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel_U(web, spa, &quot;Delivers to the customer&#39;s web browser&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(api, db, &quot;Reads from and writes to&quot;, &quot;JDBC&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel(api, db2, &quot;Reads from and writes to&quot;, &quot;JDBC&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    Rel_R(db, db2, &quot;Replicates data to&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(spa, api, $offsetY=&quot;-40&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(web, spa, $offsetY=&quot;-40&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(api, db, $offsetY=&quot;-20&quot;, $offsetX=&quot;5&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(api, db2, $offsetX=&quot;-40&quot;, $offsetY=&quot;-20&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">    UpdateRelStyle(db, db2, $offsetY=&quot;-10&quot;)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h5>Render:</h5>`,4);function m(y,d,q,b,S,D){const e=l("Mermaid");return o(),t("div",null,[p,s(e,{id:"me11",graph:"%20%20%20%20C4Context%0A%20%20%20%20%20%20title%20System%20Context%20diagram%20for%20Internet%20Banking%20System%0A%20%20%20%20%20%20Enterprise_Boundary(b0%2C%20%22BankBoundary0%22)%20%7B%0A%20%20%20%20%20%20%20%20Person(customerA%2C%20%22Banking%20Customer%20A%22%2C%20%22A%20customer%20of%20the%20bank%2C%20with%20personal%20bank%20accounts.%22)%0A%20%20%20%20%20%20%20%20Person(customerB%2C%20%22Banking%20Customer%20B%22)%0A%20%20%20%20%20%20%20%20Person_Ext(customerC%2C%20%22Banking%20Customer%20C%22%2C%20%22desc%22)%0A%0A%20%20%20%20%20%20%20%20Person(customerD%2C%20%22Banking%20Customer%20D%22%2C%20%22A%20customer%20of%20the%20bank%2C%20%3Cbr%2F%3E%20with%20personal%20bank%20accounts.%22)%0A%0A%20%20%20%20%20%20%20%20System(SystemAA%2C%20%22Internet%20Banking%20System%22%2C%20%22Allows%20customers%20to%20view%20information%20about%20their%20bank%20accounts%2C%20and%20make%20payments.%22)%0A%0A%20%20%20%20%20%20%20%20Enterprise_Boundary(b1%2C%20%22BankBoundary%22)%20%7B%0A%0A%20%20%20%20%20%20%20%20%20%20SystemDb_Ext(SystemE%2C%20%22Mainframe%20Banking%20System%22%2C%20%22Stores%20all%20of%20the%20core%20banking%20information%20about%20customers%2C%20accounts%2C%20transactions%2C%20etc.%22)%0A%0A%20%20%20%20%20%20%20%20%20%20System_Boundary(b2%2C%20%22BankBoundary2%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20System(SystemA%2C%20%22Banking%20System%20A%22)%0A%20%20%20%20%20%20%20%20%20%20%20%20System(SystemB%2C%20%22Banking%20System%20B%22%2C%20%22A%20system%20of%20the%20bank%2C%20with%20personal%20bank%20accounts.%20next%20line.%22)%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20System_Ext(SystemC%2C%20%22E-mail%20system%22%2C%20%22The%20internal%20Microsoft%20Exchange%20e-mail%20system.%22)%0A%20%20%20%20%20%20%20%20%20%20SystemDb(SystemD%2C%20%22Banking%20System%20D%20Database%22%2C%20%22A%20system%20of%20the%20bank%2C%20with%20personal%20bank%20accounts.%22)%0A%0A%20%20%20%20%20%20%20%20%20%20Boundary(b3%2C%20%22BankBoundary3%22%2C%20%22boundary%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20SystemQueue(SystemF%2C%20%22Banking%20System%20F%20Queue%22%2C%20%22A%20system%20of%20the%20bank.%22)%0A%20%20%20%20%20%20%20%20%20%20%20%20SystemQueue_Ext(SystemG%2C%20%22Banking%20System%20G%20Queue%22%2C%20%22A%20system%20of%20the%20bank%2C%20with%20personal%20bank%20accounts.%22)%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20BiRel(customerA%2C%20SystemAA%2C%20%22Uses%22)%0A%20%20%20%20%20%20BiRel(SystemAA%2C%20SystemE%2C%20%22Uses%22)%0A%20%20%20%20%20%20Rel(SystemAA%2C%20SystemC%2C%20%22Sends%20e-mails%22%2C%20%22SMTP%22)%0A%20%20%20%20%20%20Rel(SystemC%2C%20customerA%2C%20%22Sends%20e-mails%20to%22)%0A%0A%20%20%20%20%20%20UpdateElementStyle(customerA%2C%20%24fontColor%3D%22red%22%2C%20%24bgColor%3D%22grey%22%2C%20%24borderColor%3D%22red%22)%0A%20%20%20%20%20%20UpdateRelStyle(customerA%2C%20SystemAA%2C%20%24textColor%3D%22blue%22%2C%20%24lineColor%3D%22blue%22%2C%20%24offsetX%3D%225%22)%0A%20%20%20%20%20%20UpdateRelStyle(SystemAA%2C%20SystemE%2C%20%24textColor%3D%22blue%22%2C%20%24lineColor%3D%22blue%22%2C%20%24offsetY%3D%22-10%22)%0A%20%20%20%20%20%20UpdateRelStyle(SystemAA%2C%20SystemC%2C%20%24textColor%3D%22blue%22%2C%20%24lineColor%3D%22blue%22%2C%20%24offsetY%3D%22-40%22%2C%20%24offsetX%3D%22-50%22)%0A%20%20%20%20%20%20UpdateRelStyle(SystemC%2C%20customerA%2C%20%24textColor%3D%22red%22%2C%20%24lineColor%3D%22red%22%2C%20%24offsetX%3D%22-50%22%2C%20%24offsetY%3D%2220%22)%0A%0A%20%20%20%20%20%20UpdateLayoutConfig(%24c4ShapeInRow%3D%223%22%2C%20%24c4BoundaryInRow%3D%221%22)%0A%0A%0A"}),r,s(e,{id:"me590",graph:"%20%20%20%20C4Context%0A%20%20%20%20%20%20title%20System%20Context%20diagram%20for%20Internet%20Banking%20System%0A%20%20%20%20%20%20Enterprise_Boundary(b0%2C%20%22BankBoundary0%22)%20%7B%0A%20%20%20%20%20%20%20%20Person(customerA%2C%20%22Banking%20Customer%20A%22%2C%20%22A%20customer%20of%20the%20bank%2C%20with%20personal%20bank%20accounts.%22)%0A%20%20%20%20%20%20%20%20Person(customerB%2C%20%22Banking%20Customer%20B%22)%0A%20%20%20%20%20%20%20%20Person_Ext(customerC%2C%20%22Banking%20Customer%20C%22%2C%20%22desc%22)%0A%0A%20%20%20%20%20%20%20%20Person(customerD%2C%20%22Banking%20Customer%20D%22%2C%20%22A%20customer%20of%20the%20bank%2C%20%3Cbr%2F%3E%20with%20personal%20bank%20accounts.%22)%0A%0A%20%20%20%20%20%20%20%20System(SystemAA%2C%20%22Internet%20Banking%20System%22%2C%20%22Allows%20customers%20to%20view%20information%20about%20their%20bank%20accounts%2C%20and%20make%20payments.%22)%0A%0A%20%20%20%20%20%20%20%20Enterprise_Boundary(b1%2C%20%22BankBoundary%22)%20%7B%0A%0A%20%20%20%20%20%20%20%20%20%20SystemDb_Ext(SystemE%2C%20%22Mainframe%20Banking%20System%22%2C%20%22Stores%20all%20of%20the%20core%20banking%20information%20about%20customers%2C%20accounts%2C%20transactions%2C%20etc.%22)%0A%0A%20%20%20%20%20%20%20%20%20%20System_Boundary(b2%2C%20%22BankBoundary2%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20System(SystemA%2C%20%22Banking%20System%20A%22)%0A%20%20%20%20%20%20%20%20%20%20%20%20System(SystemB%2C%20%22Banking%20System%20B%22%2C%20%22A%20system%20of%20the%20bank%2C%20with%20personal%20bank%20accounts.%20next%20line.%22)%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20%20%20System_Ext(SystemC%2C%20%22E-mail%20system%22%2C%20%22The%20internal%20Microsoft%20Exchange%20e-mail%20system.%22)%0A%20%20%20%20%20%20%20%20%20%20SystemDb(SystemD%2C%20%22Banking%20System%20D%20Database%22%2C%20%22A%20system%20of%20the%20bank%2C%20with%20personal%20bank%20accounts.%22)%0A%0A%20%20%20%20%20%20%20%20%20%20Boundary(b3%2C%20%22BankBoundary3%22%2C%20%22boundary%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20SystemQueue(SystemF%2C%20%22Banking%20System%20F%20Queue%22%2C%20%22A%20system%20of%20the%20bank.%22)%0A%20%20%20%20%20%20%20%20%20%20%20%20SystemQueue_Ext(SystemG%2C%20%22Banking%20System%20G%20Queue%22%2C%20%22A%20system%20of%20the%20bank%2C%20with%20personal%20bank%20accounts.%22)%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20BiRel(customerA%2C%20SystemAA%2C%20%22Uses%22)%0A%20%20%20%20%20%20BiRel(SystemAA%2C%20SystemE%2C%20%22Uses%22)%0A%20%20%20%20%20%20Rel(SystemAA%2C%20SystemC%2C%20%22Sends%20e-mails%22%2C%20%22SMTP%22)%0A%20%20%20%20%20%20Rel(SystemC%2C%20customerA%2C%20%22Sends%20e-mails%20to%22)%0A%0A%20%20%20%20%20%20UpdateElementStyle(customerA%2C%20%24fontColor%3D%22red%22%2C%20%24bgColor%3D%22grey%22%2C%20%24borderColor%3D%22red%22)%0A%20%20%20%20%20%20UpdateRelStyle(customerA%2C%20SystemAA%2C%20%24textColor%3D%22blue%22%2C%20%24lineColor%3D%22blue%22%2C%20%24offsetX%3D%225%22)%0A%20%20%20%20%20%20UpdateRelStyle(SystemAA%2C%20SystemE%2C%20%24textColor%3D%22blue%22%2C%20%24lineColor%3D%22blue%22%2C%20%24offsetY%3D%22-10%22)%0A%20%20%20%20%20%20UpdateRelStyle(SystemAA%2C%20SystemC%2C%20%24textColor%3D%22blue%22%2C%20%24lineColor%3D%22blue%22%2C%20%24offsetY%3D%22-40%22%2C%20%24offsetX%3D%22-50%22)%0A%20%20%20%20%20%20UpdateRelStyle(SystemC%2C%20customerA%2C%20%24textColor%3D%22red%22%2C%20%24lineColor%3D%22red%22%2C%20%24offsetX%3D%22-50%22%2C%20%24offsetY%3D%2220%22)%0A%0A%20%20%20%20%20%20UpdateLayoutConfig(%24c4ShapeInRow%3D%223%22%2C%20%24c4BoundaryInRow%3D%221%22)%0A%0A"}),u,s(e,{id:"me594",graph:"%20%20%20%20C4Container%0A%20%20%20%20title%20Container%20diagram%20for%20Internet%20Banking%20System%0A%0A%20%20%20%20System_Ext(email_system%2C%20%22E-Mail%20System%22%2C%20%22The%20internal%20Microsoft%20Exchange%20system%22%2C%20%24tags%3D%22v1.0%22)%0A%20%20%20%20Person(customer%2C%20Customer%2C%20%22A%20customer%20of%20the%20bank%2C%20with%20personal%20bank%20accounts%22%2C%20%24tags%3D%22v1.0%22)%0A%0A%20%20%20%20Container_Boundary(c1%2C%20%22Internet%20Banking%22)%20%7B%0A%20%20%20%20%20%20%20%20Container(spa%2C%20%22Single-Page%20App%22%2C%20%22JavaScript%2C%20Angular%22%2C%20%22Provides%20all%20the%20Internet%20banking%20functionality%20to%20cutomers%20via%20their%20web%20browser%22)%0A%20%20%20%20%20%20%20%20Container_Ext(mobile_app%2C%20%22Mobile%20App%22%2C%20%22C%23%2C%20Xamarin%22%2C%20%22Provides%20a%20limited%20subset%20of%20the%20Internet%20banking%20functionality%20to%20customers%20via%20their%20mobile%20device%22)%0A%20%20%20%20%20%20%20%20Container(web_app%2C%20%22Web%20Application%22%2C%20%22Java%2C%20Spring%20MVC%22%2C%20%22Delivers%20the%20static%20content%20and%20the%20Internet%20banking%20SPA%22)%0A%20%20%20%20%20%20%20%20ContainerDb(database%2C%20%22Database%22%2C%20%22SQL%20Database%22%2C%20%22Stores%20user%20registration%20information%2C%20hashed%20auth%20credentials%2C%20access%20logs%2C%20etc.%22)%0A%20%20%20%20%20%20%20%20ContainerDb_Ext(backend_api%2C%20%22API%20Application%22%2C%20%22Java%2C%20Docker%20Container%22%2C%20%22Provides%20Internet%20banking%20functionality%20via%20API%22)%0A%0A%20%20%20%20%7D%0A%0A%20%20%20%20System_Ext(banking_system%2C%20%22Mainframe%20Banking%20System%22%2C%20%22Stores%20all%20of%20the%20core%20banking%20information%20about%20customers%2C%20accounts%2C%20transactions%2C%20etc.%22)%0A%0A%20%20%20%20Rel(customer%2C%20web_app%2C%20%22Uses%22%2C%20%22HTTPS%22)%0A%20%20%20%20UpdateRelStyle(customer%2C%20web_app%2C%20%24offsetY%3D%2260%22%2C%20%24offsetX%3D%2290%22)%0A%20%20%20%20Rel(customer%2C%20spa%2C%20%22Uses%22%2C%20%22HTTPS%22)%0A%20%20%20%20UpdateRelStyle(customer%2C%20spa%2C%20%24offsetY%3D%22-40%22)%0A%20%20%20%20Rel(customer%2C%20mobile_app%2C%20%22Uses%22)%0A%20%20%20%20UpdateRelStyle(customer%2C%20mobile_app%2C%20%24offsetY%3D%22-30%22)%0A%0A%20%20%20%20Rel(web_app%2C%20spa%2C%20%22Delivers%22)%0A%20%20%20%20UpdateRelStyle(web_app%2C%20spa%2C%20%24offsetX%3D%22130%22)%0A%20%20%20%20Rel(spa%2C%20backend_api%2C%20%22Uses%22%2C%20%22async%2C%20JSON%2FHTTPS%22)%0A%20%20%20%20Rel(mobile_app%2C%20backend_api%2C%20%22Uses%22%2C%20%22async%2C%20JSON%2FHTTPS%22)%0A%20%20%20%20Rel_Back(database%2C%20backend_api%2C%20%22Reads%20from%20and%20writes%20to%22%2C%20%22sync%2C%20JDBC%22)%0A%0A%20%20%20%20Rel(email_system%2C%20customer%2C%20%22Sends%20e-mails%20to%22)%0A%20%20%20%20UpdateRelStyle(email_system%2C%20customer%2C%20%24offsetX%3D%22-45%22)%0A%20%20%20%20Rel(backend_api%2C%20email_system%2C%20%22Sends%20e-mails%20using%22%2C%20%22sync%2C%20SMTP%22)%0A%20%20%20%20UpdateRelStyle(backend_api%2C%20email_system%2C%20%24offsetY%3D%22-60%22)%0A%20%20%20%20Rel(backend_api%2C%20banking_system%2C%20%22Uses%22%2C%20%22sync%2Fasync%2C%20XML%2FHTTPS%22)%0A%20%20%20%20UpdateRelStyle(backend_api%2C%20banking_system%2C%20%24offsetY%3D%22-50%22%2C%20%24offsetX%3D%22-140%22)%0A%0A"}),c,s(e,{id:"me598",graph:"%20%20%20%20C4Component%0A%20%20%20%20title%20Component%20diagram%20for%20Internet%20Banking%20System%20-%20API%20Application%0A%0A%20%20%20%20Container(spa%2C%20%22Single%20Page%20Application%22%2C%20%22javascript%20and%20angular%22%2C%20%22Provides%20all%20the%20internet%20banking%20functionality%20to%20customers%20via%20their%20web%20browser.%22)%0A%20%20%20%20Container(ma%2C%20%22Mobile%20App%22%2C%20%22Xamarin%22%2C%20%22Provides%20a%20limited%20subset%20ot%20the%20internet%20banking%20functionality%20to%20customers%20via%20their%20mobile%20mobile%20device.%22)%0A%20%20%20%20ContainerDb(db%2C%20%22Database%22%2C%20%22Relational%20Database%20Schema%22%2C%20%22Stores%20user%20registration%20information%2C%20hashed%20authentication%20credentials%2C%20access%20logs%2C%20etc.%22)%0A%20%20%20%20System_Ext(mbs%2C%20%22Mainframe%20Banking%20System%22%2C%20%22Stores%20all%20of%20the%20core%20banking%20information%20about%20customers%2C%20accounts%2C%20transactions%2C%20etc.%22)%0A%0A%20%20%20%20Container_Boundary(api%2C%20%22API%20Application%22)%20%7B%0A%20%20%20%20%20%20%20%20Component(sign%2C%20%22Sign%20In%20Controller%22%2C%20%22MVC%20Rest%20Controller%22%2C%20%22Allows%20users%20to%20sign%20in%20to%20the%20internet%20banking%20system%22)%0A%20%20%20%20%20%20%20%20Component(accounts%2C%20%22Accounts%20Summary%20Controller%22%2C%20%22MVC%20Rest%20Controller%22%2C%20%22Provides%20customers%20with%20a%20summary%20of%20their%20bank%20accounts%22)%0A%20%20%20%20%20%20%20%20Component(security%2C%20%22Security%20Component%22%2C%20%22Spring%20Bean%22%2C%20%22Provides%20functionality%20related%20to%20singing%20in%2C%20changing%20passwords%2C%20etc.%22)%0A%20%20%20%20%20%20%20%20Component(mbsfacade%2C%20%22Mainframe%20Banking%20System%20Facade%22%2C%20%22Spring%20Bean%22%2C%20%22A%20facade%20onto%20the%20mainframe%20banking%20system.%22)%0A%0A%20%20%20%20%20%20%20%20Rel(sign%2C%20security%2C%20%22Uses%22)%0A%20%20%20%20%20%20%20%20Rel(accounts%2C%20mbsfacade%2C%20%22Uses%22)%0A%20%20%20%20%20%20%20%20Rel(security%2C%20db%2C%20%22Read%20%26%20write%20to%22%2C%20%22JDBC%22)%0A%20%20%20%20%20%20%20%20Rel(mbsfacade%2C%20mbs%2C%20%22Uses%22%2C%20%22XML%2FHTTPS%22)%0A%20%20%20%20%7D%0A%0A%20%20%20%20Rel_Back(spa%2C%20sign%2C%20%22Uses%22%2C%20%22JSON%2FHTTPS%22)%0A%20%20%20%20Rel(spa%2C%20accounts%2C%20%22Uses%22%2C%20%22JSON%2FHTTPS%22)%0A%0A%20%20%20%20Rel(ma%2C%20sign%2C%20%22Uses%22%2C%20%22JSON%2FHTTPS%22)%0A%20%20%20%20Rel(ma%2C%20accounts%2C%20%22Uses%22%2C%20%22JSON%2FHTTPS%22)%0A%0A%20%20%20%20UpdateRelStyle(spa%2C%20sign%2C%20%24offsetY%3D%22-40%22)%0A%20%20%20%20UpdateRelStyle(spa%2C%20accounts%2C%20%24offsetX%3D%2240%22%2C%20%24offsetY%3D%2240%22)%0A%0A%20%20%20%20UpdateRelStyle(ma%2C%20sign%2C%20%24offsetX%3D%22-90%22%2C%20%24offsetY%3D%2240%22)%0A%20%20%20%20UpdateRelStyle(ma%2C%20accounts%2C%20%24offsetY%3D%22-40%22)%0A%0A%20%20%20%20%20%20%20%20UpdateRelStyle(sign%2C%20security%2C%20%24offsetX%3D%22-160%22%2C%20%24offsetY%3D%2210%22)%0A%20%20%20%20%20%20%20%20UpdateRelStyle(accounts%2C%20mbsfacade%2C%20%24offsetX%3D%22140%22%2C%20%24offsetY%3D%2210%22)%0A%20%20%20%20%20%20%20%20UpdateRelStyle(security%2C%20db%2C%20%24offsetY%3D%22-40%22)%0A%20%20%20%20%20%20%20%20UpdateRelStyle(mbsfacade%2C%20mbs%2C%20%24offsetY%3D%22-40%22)%0A%0A"}),C,s(e,{id:"me602",graph:"%20%20%20%20C4Dynamic%0A%20%20%20%20title%20Dynamic%20diagram%20for%20Internet%20Banking%20System%20-%20API%20Application%0A%0A%20%20%20%20ContainerDb(c4%2C%20%22Database%22%2C%20%22Relational%20Database%20Schema%22%2C%20%22Stores%20user%20registration%20information%2C%20hashed%20authentication%20credentials%2C%20access%20logs%2C%20etc.%22)%0A%20%20%20%20Container(c1%2C%20%22Single-Page%20Application%22%2C%20%22JavaScript%20and%20Angular%22%2C%20%22Provides%20all%20of%20the%20Internet%20banking%20functionality%20to%20customers%20via%20their%20web%20browser.%22)%0A%20%20%20%20Container_Boundary(b%2C%20%22API%20Application%22)%20%7B%0A%20%20%20%20%20%20Component(c3%2C%20%22Security%20Component%22%2C%20%22Spring%20Bean%22%2C%20%22Provides%20functionality%20Related%20to%20signing%20in%2C%20changing%20passwords%2C%20etc.%22)%0A%20%20%20%20%20%20Component(c2%2C%20%22Sign%20In%20Controller%22%2C%20%22Spring%20MVC%20Rest%20Controller%22%2C%20%22Allows%20users%20to%20sign%20in%20to%20the%20Internet%20Banking%20System.%22)%0A%20%20%20%20%7D%0A%20%20%20%20Rel(c1%2C%20c2%2C%20%22Submits%20credentials%20to%22%2C%20%22JSON%2FHTTPS%22)%0A%20%20%20%20Rel(c2%2C%20c3%2C%20%22Calls%20isAuthenticated()%20on%22)%0A%20%20%20%20Rel(c3%2C%20c4%2C%20%22select%20*%20from%20users%20where%20username%20%3D%20%3F%22%2C%20%22JDBC%22)%0A%0A%20%20%20%20UpdateRelStyle(c1%2C%20c2%2C%20%24textColor%3D%22red%22%2C%20%24offsetY%3D%22-40%22)%0A%20%20%20%20UpdateRelStyle(c2%2C%20c3%2C%20%24textColor%3D%22red%22%2C%20%24offsetX%3D%22-40%22%2C%20%24offsetY%3D%2260%22)%0A%20%20%20%20UpdateRelStyle(c3%2C%20c4%2C%20%24textColor%3D%22red%22%2C%20%24offsetY%3D%22-40%22%2C%20%24offsetX%3D%2210%22)%0A%0A"}),A,s(e,{id:"me606",graph:"%20%20%20%20C4Deployment%0A%20%20%20%20title%20Deployment%20Diagram%20for%20Internet%20Banking%20System%20-%20Live%0A%0A%20%20%20%20Deployment_Node(mob%2C%20%22Customer's%20mobile%20device%22%2C%20%22Apple%20IOS%20or%20Android%22)%7B%0A%20%20%20%20%20%20%20%20Container(mobile%2C%20%22Mobile%20App%22%2C%20%22Xamarin%22%2C%20%22Provides%20a%20limited%20subset%20of%20the%20Internet%20Banking%20functionality%20to%20customers%20via%20their%20mobile%20device.%22)%0A%20%20%20%20%7D%0A%0A%20%20%20%20Deployment_Node(comp%2C%20%22Customer's%20computer%22%2C%20%22Mircosoft%20Windows%20or%20Apple%20macOS%22)%7B%0A%20%20%20%20%20%20%20%20Deployment_Node(browser%2C%20%22Web%20Browser%22%2C%20%22Google%20Chrome%2C%20Mozilla%20Firefox%2C%3Cbr%2F%3E%20Apple%20Safari%20or%20Microsoft%20Edge%22)%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20Container(spa%2C%20%22Single%20Page%20Application%22%2C%20%22JavaScript%20and%20Angular%22%2C%20%22Provides%20all%20of%20the%20Internet%20Banking%20functionality%20to%20customers%20via%20their%20web%20browser.%22)%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20Deployment_Node(plc%2C%20%22Big%20Bank%20plc%22%2C%20%22Big%20Bank%20plc%20data%20center%22)%7B%0A%20%20%20%20%20%20%20%20Deployment_Node(dn%2C%20%22bigbank-api***%20x8%22%2C%20%22Ubuntu%2016.04%20LTS%22)%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20Deployment_Node(apache%2C%20%22Apache%20Tomcat%22%2C%20%22Apache%20Tomcat%208.x%22)%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Container(api%2C%20%22API%20Application%22%2C%20%22Java%20and%20Spring%20MVC%22%2C%20%22Provides%20Internet%20Banking%20functionality%20via%20a%20JSON%2FHTTPS%20API.%22)%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20Deployment_Node(bb2%2C%20%22bigbank-web***%20x4%22%2C%20%22Ubuntu%2016.04%20LTS%22)%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20Deployment_Node(apache2%2C%20%22Apache%20Tomcat%22%2C%20%22Apache%20Tomcat%208.x%22)%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Container(web%2C%20%22Web%20Application%22%2C%20%22Java%20and%20Spring%20MVC%22%2C%20%22Delivers%20the%20static%20content%20and%20the%20Internet%20Banking%20single%20page%20application.%22)%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20Deployment_Node(bigbankdb01%2C%20%22bigbank-db01%22%2C%20%22Ubuntu%2016.04%20LTS%22)%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20Deployment_Node(oracle%2C%20%22Oracle%20-%20Primary%22%2C%20%22Oracle%2012c%22)%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ContainerDb(db%2C%20%22Database%22%2C%20%22Relational%20Database%20Schema%22%2C%20%22Stores%20user%20registration%20information%2C%20hashed%20authentication%20credentials%2C%20access%20logs%2C%20etc.%22)%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20Deployment_Node(bigbankdb02%2C%20%22bigbank-db02%22%2C%20%22Ubuntu%2016.04%20LTS%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20Deployment_Node(oracle2%2C%20%22Oracle%20-%20Secondary%22%2C%20%22Oracle%2012c%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20ContainerDb(db2%2C%20%22Database%22%2C%20%22Relational%20Database%20Schema%22%2C%20%22Stores%20user%20registration%20information%2C%20hashed%20authentication%20credentials%2C%20access%20logs%2C%20etc.%22)%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20Rel(mobile%2C%20api%2C%20%22Makes%20API%20calls%20to%22%2C%20%22json%2FHTTPS%22)%0A%20%20%20%20Rel(spa%2C%20api%2C%20%22Makes%20API%20calls%20to%22%2C%20%22json%2FHTTPS%22)%0A%20%20%20%20Rel_U(web%2C%20spa%2C%20%22Delivers%20to%20the%20customer's%20web%20browser%22)%0A%20%20%20%20Rel(api%2C%20db%2C%20%22Reads%20from%20and%20writes%20to%22%2C%20%22JDBC%22)%0A%20%20%20%20Rel(api%2C%20db2%2C%20%22Reads%20from%20and%20writes%20to%22%2C%20%22JDBC%22)%0A%20%20%20%20Rel_R(db%2C%20db2%2C%20%22Replicates%20data%20to%22)%0A%0A%20%20%20%20UpdateRelStyle(spa%2C%20api%2C%20%24offsetY%3D%22-40%22)%0A%20%20%20%20UpdateRelStyle(web%2C%20spa%2C%20%24offsetY%3D%22-40%22)%0A%20%20%20%20UpdateRelStyle(api%2C%20db%2C%20%24offsetY%3D%22-20%22%2C%20%24offsetX%3D%225%22)%0A%20%20%20%20UpdateRelStyle(api%2C%20db2%2C%20%24offsetX%3D%22-40%22%2C%20%24offsetY%3D%22-20%22)%0A%20%20%20%20UpdateRelStyle(db%2C%20db2%2C%20%24offsetY%3D%22-10%22)%0A%0A"})])}const h=a(i,[["render",m]]);export{f as __pageData,h as default};
